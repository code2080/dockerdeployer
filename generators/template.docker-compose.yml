version: '3'
services:
  database:
    container_name: dode_database
    image: mysql:{{ mysql_version }}
    env_file: ./.env
    volumes:
      - mysql:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    networks:
      - shared
{% for app in apps %}
{% if app.type == "django" %}
  {{ app.name }}:
    container_name: dode_{{ app.name }}
    build:
      context: ./django
      args:
        - GUNICORN_VERSION={{ gunicorn_version }}
        - REQUIREMENTS=requirements_{{ app.name }}.txt
        - SETTINGS=settings_{{ app.name }}.py
    env_file: ./.env
    volumes:
      - ../{{ app.name }}/:/app/
      - mysql:/var/lib/mysql
    {% set server_list = app.server.split(':') %}
      - root_directory_{{ server_list[0]|replace(".", "_", 3) }}_{{ server_list[1] }}:/django/
    entrypoint: /script/entrypoint.sh
    command: ["gunicorn", "--bind", "0.0.0.0:{{ app.port }}", "-k", "gevent", "--workers", "{{ app.workers }}", "{{ app.wsgi }}", "--reload"]
    restart: always
    depends_on:
      - database
    networks:
      - shared
{% elif app.type == "nodejs" and app.start_command %}
  {{ app.name }}:
    container_name: dode_{{ app.name }}
    build:
      context: ./nodejs
      args:
        - PACKAGES=package_{{ app.name }}.json
    env_file: ./.env
    volumes:
      - ../{{ app.name }}/:/app/
    command: {{ app.start_command }}
    restart: always
    networks:
      - shared
{% endif %}
{% endfor %}
  webserver:
    container_name: dode_webserver
    image: nginx:stable
    volumes:
      - ./nginx/config/:/etc/nginx/
    {% for server in servers %}
    {% set server_list = server.split(':') %}
      - root_directory_{{ server_list[0]|replace(".", "_", 3) }}_{{ server_list[1] }}:/root_directory_{{ server_list[0]|replace(".", "_", 3) }}_{{ server_list[1] }}/
    {% endfor %}
    {% for app in apps %}
    {% if app.static_files %}
      - ../{{ app.name }}/www/:/www_{{ app.name }}/
    {% endif %}
    {% endfor %}
    command: /bin/bash -c "nginx -g 'daemon off;'"
    ports:
    {% for port in ports %}
      - "{{ port }}:{{ port }}"
    {% endfor %}
    restart: always
    depends_on:
      {% for app in apps %}
      - {{ app.name }}
      {% endfor %}
    networks:
      - shared
volumes:
  mysql:
{% for server in servers %}
{% set server_list = server.split(':') %}
  root_directory_{{ server_list[0]|replace(".", "_", 3) }}_{{ server_list[1] }}:
{% endfor %}
networks:
  shared:
